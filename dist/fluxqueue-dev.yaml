apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
    control-plane: controller-manager
  name: fluxqueue-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: fluxqueue-system/fluxqueue-serving-cert
    controller-gen.kubebuilder.io/version: v0.15.0
  name: fluxjobs.jobs.converged-computing.org
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: fluxqueue-webhook-service
          namespace: fluxqueue-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: jobs.converged-computing.org
  names:
    kind: FluxJob
    listKind: FluxJobList
    plural: fluxjobs
    singular: fluxjob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FluxJob is the Schema for the fluxjobs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              FluxJobSpec defines the desired state of FluxJob
              A user is not expected to create these -
               1. A job or similar will be submit
               2. It will be intercepted by a webhook here
               3. The webhook will generate the object
               4. The job will go into the fluxqueue
               5. When scheduled, it gets sent with an exact node assignment
                  to the custom scheduler plugin.
               6. Cleanup will need to be handled


              A FluxJob is a mapping of a Kubernetes abstraction (e.g., job)
              into a Flux JobSpec, one that Fluxion can digest.
            properties:
              duration:
                description: Duration is the maximum runtime of the job
                format: int32
                type: integer
              jobspec:
                description: JobSpec is the Flux jobspec
                type: string
              name:
                description: Original name of the job
                type: string
              nodes:
                description: Nodes needed for the job
                format: int32
                type: integer
              object:
                description: |-
                  Object is the underlying pod/job/object specification
                  This currently is assumed that one job has equivalent pods under it
                format: byte
                type: string
              reservation:
                description: |-
                  If true, we are allowed to ask fluxion for
                  a reservation
                type: boolean
              resources:
                description: Resources assigned
                properties:
                  nodes:
                    description: Nodes assigned to the job
                    items:
                      type: string
                    type: array
                type: object
              type:
                description: Type of object that is wrapped
                type: integer
            type: object
          status:
            description: FluxJobStatus defines the observed state of FluxJob
            properties:
              submitStatus:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-controller-manager
  namespace: fluxqueue-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-leader-election-role
  namespace: fluxqueue-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-fluxjob-editor-role
rules:
- apiGroups:
  - jobs.converged-computing.org
  resources:
  - fluxjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jobs.converged-computing.org
  resources:
  - fluxjobs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-fluxjob-viewer-role
rules:
- apiGroups:
  - jobs.converged-computing.org
  resources:
  - fluxjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - jobs.converged-computing.org
  resources:
  - fluxjobs/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluxqueue-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/log
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jobs.converged-computing.org
  resources:
  - fluxjobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - jobs.converged-computing.org
  resources:
  - fluxjobs/finalizers
  verbs:
  - update
- apiGroups:
  - jobs.converged-computing.org
  resources:
  - fluxjobs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluxqueue-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluxqueue-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-leader-election-rolebinding
  namespace: fluxqueue-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fluxqueue-leader-election-role
subjects:
- kind: ServiceAccount
  name: fluxqueue-controller-manager
  namespace: fluxqueue-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluxqueue-manager-role
subjects:
- kind: ServiceAccount
  name: fluxqueue-controller-manager
  namespace: fluxqueue-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluxqueue-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluxqueue-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: fluxqueue-controller-manager
  namespace: fluxqueue-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
    control-plane: controller-manager
  name: fluxqueue-controller-manager-metrics-service
  namespace: fluxqueue-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-webhook-service
  namespace: fluxqueue-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
    control-plane: controller-manager
  name: fluxqueue-controller-manager
  namespace: fluxqueue-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --policy=lonode
        command:
        - /manager
        env:
        - name: DATABASE_URL
          value: postgres://postgres:postgres@postgres:5432/postgres
        - name: PGHOST
          value: postgres
        - name: PGDATABASE
          value: postgres
        - name: PGPORT
          value: "5432"
        - name: PGPASSWORD
          value: postgres
        image: ghcr.io/converged-computing/fluxqueue:test
        imagePullPolicy: Never
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - |
              status=$(curl -ks http://localhost:8081/readyz); if [ "$status" != "ok" ]; then exit 1; fi
              pg_isready -d postgres -h postgres -p 5432 -U postgres;
          initialDelaySeconds: 20
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - command:
        - /code/bin/server
        - --port=4242
        image: ghcr.io/converged-computing/fluxion:latest
        imagePullPolicy: IfNotPresent
        name: fluxion
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: fluxqueue-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: fluxqueue
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: fluxqueue
  name: fluxqueue-serving-cert
  namespace: fluxqueue-system
spec:
  dnsNames:
  - fluxqueue-webhook-service.fluxqueue-system.svc
  - fluxqueue-webhook-service.fluxqueue-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: fluxqueue-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-selfsigned-issuer
  namespace: fluxqueue-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: fluxqueue-system/fluxqueue-serving-cert
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: fluxqueue
  name: fluxqueue-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: fluxqueue-webhook-service
      namespace: fluxqueue-system
      path: /mutate-v1-sidecar
  failurePolicy: Fail
  name: mfluxjob.kb.io
  rules:
  - apiGroups:
    - ""
    - core
    - batch
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    - jobs
  sideEffects: None
